#include <xc.h>

#pragma config FOSC = XT
#pragma config WDTE = OFF
#pragma config PWRTE = ON
#pragma config BOREN = ON
#pragma config LVP = OFF
#pragma config CPD = OFF
#pragma config WRT = OFF
#pragma config CP = OFF

bit myTMR0IF = 0;
unsigned int ledStatus = 0;
unsigned int isBlinking = 0;

void interrupt ISR() {
    if (INTF == 1) {  
        INTF = 0;
        isBlinking ^= 1;
        RA0 = ledStatus;
    }
    
    if (TMR0IF == 1) {  
        TMR0IF = 0;
        myTMR0IF = 1;
    }
}


void delay(int overflow_count) {
    int of_count = 0;
    while (of_count < overflow_count) {
        if (myTMR0IF == 1) {
            of_count++;
            myTMR0IF = 0;
        }
    }
}

void main() {
    TRISB = 0xFF;  
    TRISA = 0x00;
    
    OPTION_REG = 0xC4;
    
    INTF = 0;
    INTE = 1;  
    
    TMR0IF = 0;
    TMR0IE = 1;  
    
    GIE = 1; 

	delay(61);

    while (1) {						//blinking initially stopped
        delay(61);
        if (isBlinking == 1) {
            ledStatus ^= 1;
            RA0 = ledStatus;
        }
        else { 
            
        }
    }
}
